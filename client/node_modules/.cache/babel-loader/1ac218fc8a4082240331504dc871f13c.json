{"ast":null,"code":"var _jsxFileName = \"/Users/noe/vagrant-lamp/sites/contact/client/src/components/contacts/contacts.jsx\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport ContactContext from '../../contexts/contact/contactContext';\nimport ContactItem from './contact-item';\nimport spinner from '../spinner/spinner';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const contacts = contactContext.contacts,\n        filtered = contactContext.filtered,\n        getContacts = contactContext.getContacts,\n        loading = contactContext.loading;\n  useEffect(() => {\n    getContacts(); //eslint-disable-next-line\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, contacts !== null && !loading ? React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, filtered != null ? filtered.map(contact => React.createElement(CSSTransition, {\n    key: contact.id,\n    timeout: 500,\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))) : contacts.map(contact => React.createElement(CSSTransition, {\n    key: contact.id,\n    timeout: 500,\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })))) : React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/contact/client/src/components/contacts/contacts.jsx"],"names":["React","Fragment","useContext","useEffect","ContactContext","ContactItem","spinner","CSSTransition","TransitionGroup","Contacts","contactContext","contacts","filtered","getContacts","loading","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACtB,QAAMC,cAAc,GAAGR,UAAU,CAACE,cAAD,CAAjC;AADsB,QAGdO,QAHc,GAG+BD,cAH/B,CAGdC,QAHc;AAAA,QAGJC,QAHI,GAG+BF,cAH/B,CAGJE,QAHI;AAAA,QAGMC,WAHN,GAG+BH,cAH/B,CAGMG,WAHN;AAAA,QAGmBC,OAHnB,GAG+BJ,cAH/B,CAGmBI,OAHnB;AAItBX,EAAAA,SAAS,CAAC,MAAI;AACbU,IAAAA,WAAW,GADE,CAEb;AACA,GAHQ,EAGN,EAHM,CAAT;AAKA,SACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,QAAQ,KAAI,IAAZ,IAAoB,CAACG,OAArB,GAAiC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACjCF,QAAQ,IAAI,IAAZ,GAAmBA,QAAQ,CAACG,GAAT,CAAaC,OAAO,IACvC,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA5B;AAAgC,IAAA,OAAO,EAAE,GAAzC;AAA8C,IAAA,SAAS,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAED,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADmB,CAAnB,GAICL,QAAQ,CAACI,GAAT,CAAaC,OAAO,IACtB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA5B;AAAgC,IAAA,OAAO,EAAE,GAAzC;AAA8C,IAAA,SAAS,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAED,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADE,CALgC,CAAjC,GAUsB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXvB,CADD;AAeA,CAxBD;;AAyBA,eAAeP,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport ContactContext from '../../contexts/contact/contactContext';\nimport ContactItem from './contact-item';\nimport spinner from '../spinner/spinner';\n\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst Contacts = () => {\n\tconst contactContext = useContext(ContactContext);\n\n\tconst { contacts, filtered, getContacts, loading } = contactContext;\n\tuseEffect(()=>{\n\t\tgetContacts();\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\treturn(\n\t\t<Fragment>\n\t\t{contacts !==null && !loading ? ( <TransitionGroup>\n\t\t{filtered != null ? filtered.map(contact => \n\t\t(<CSSTransition key={contact.id} timeout={500} className='item'>\n\t\t\t<ContactItem key={contact.id} contact={contact}/>\n\t\t</CSSTransition> ))\n\t\t: contacts.map(contact =>(\n\t\t<CSSTransition key={contact.id} timeout={500} className='item'>\n\t\t\t<ContactItem key={contact.id} contact={contact}/>\n\t\t</CSSTransition>\n\t\t\t))}\n\t\t</TransitionGroup> ) : <Spinner />}\t\n\t\t</Fragment>\n\t)\n};\nexport default Contacts;"]},"metadata":{},"sourceType":"module"}