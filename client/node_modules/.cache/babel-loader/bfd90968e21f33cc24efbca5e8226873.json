{"ast":null,"code":"import _slicedToArray from \"/Users/noe/vagrant-lamp/sites/contact/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/noe/vagrant-lamp/sites/contact/client/src/contexts/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, CLEAR_CONTACTS, ADD_CONTACT, DELETE_CONTACT, CONTACT_ERROR, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../type';\n\nconst ContactState = props => {\n  const intialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(contactReducer, intialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //add\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //get\n\n\n  const getContacts = async contact => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //delete\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //set current\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //clear current\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //update\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //filter\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //clear\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/contact/client/src/contexts/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACTS","CLEAR_CONTACTS","ADD_CONTACT","DELETE_CONTACT","CONTACT_ERROR","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","intialState","contacts","current","filtered","error","state","dispatch","addContact","contact","config","headers","res","post","type","payload","data","err","response","msg","getContacts","get","GET_CONTACT","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, CLEAR_CONTACTS, ADD_CONTACT, DELETE_CONTACT,CONTACT_ERROR, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER}  from '../type';\n\nconst ContactState = props => {\n\tconst intialState ={\n\t\tcontacts: [\n\t\t\t\n\t ],\n\t current: null, \n\t filtered: null,\n\t error: null\n\t};\n\tconst [ state, dispatch ] = useReducer(contactReducer, intialState);\n\n\t//add\n\tconst addContact = async contact => {\n\t\tconst config = {\n\t\t\theaders:{\n\t\t\t\t'Content-Type':'application/json'\n\t\t\t}\n\t\t}\n\t\ttry{\n\t\t\tconst res = await axios.post('/api/contacts', contact, config);\n\t\t\tdispatch({ type: ADD_CONTACT, payload: res.data });\n\t\t}catch(err){\n\t\t\tdispatch({type: CONTACT_ERROR, payload: err.response.msg});\n\t\t}\n\n\t};\n\t//get\n\tconst getContacts = async contact => {\n\t\t\n\t\ttry{\n\t\t\tconst res = await axios.get('/api/contacts');\n\t\t\tdispatch({ type: GET_CONTACT, payload: res.data });\n\t\t}catch(err){\n\t\t\tdispatch({type: CONTACT_ERROR, payload: err.response.msg});\n\t\t}\n\n\t};\n\n\t//delete\n\tconst deleteContact = id => {\n\t\tdispatch({ type: DELETE_CONTACT, payload: id });\n\t};\n\n\t//set current\n\tconst setCurrent = contact => {\n\t\tdispatch({ type: SET_CURRENT, payload: contact });\n\t};\n\n\t//clear current\n\tconst clearCurrent = () => {\n\t\tdispatch({ type: CLEAR_CURRENT});\n\t};\n\t//update\n\tconst updateContact = contact => {\n\t\tdispatch({ type: UPDATE_CONTACT, payload: contact });\n\t};\n\t//filter\n\tconst filterContacts = text => {\n\t\tdispatch({ type: FILTER_CONTACTS, payload: text });\n\t};\n\t//clear\n\tconst clearFilter = () => {\n\t\tdispatch({ type: CLEAR_FILTER});\n\t};\n\n\treturn (\n\t\t<ContactContext.Provider \n\t\tvalue={{\n\t\t\tcontacts: state.contacts,\n\t\t\tcurrent: state.current,\n\t\t\tfiltered: state.filtered,\n\t\t\terror: state.error,\n\t\t\taddContact,\n\t\t\tdeleteContact,\n\t\t\tsetCurrent,\n\t\t\tclearCurrent,\n\t\t\tupdateContact,\n\t\t\tfilterContacts,\n\t\t\tclearFilter\n\t\t}}>\n\t\t\t{props.children}\n\t\t</ContactContext.Provider>\n\t)\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}