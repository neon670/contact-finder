{"ast":null,"code":"import _defineProperty from \"/Users/noe/vagrant-lamp/sites/contact/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/noe/vagrant-lamp/sites/contact/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/noe/vagrant-lamp/sites/contact/client/src/components/auth/register.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../contexts/alert/alertContext';\nimport AuthContext from '../../contexts/auth/authContext';\n\nconst Register = () => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const setAlert = alertContext.setAlert;\n  const register = authContext.register,\n        error = authContext.error,\n        clearErrors = authContext.clearErrors,\n        isAuthenticated = authContext.isAuthenticated;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    if (error === 'User already exists') {\n      setAlert(error, 'danger');\n      clearErrors();\n    }\n  }, [error]);\n\n  const _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    password_confirm: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const name = user.name,\n        email = user.email,\n        password = user.password,\n        password_confirm = user.password_confirm;\n\n  const onChange = e => setUser(_objectSpread({}, user, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (name === '' || email === '' || password === '') {\n      setAlert('Please enter all fields', 'danger');\n    } else if (password !== password_confirm) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Account \", React.createElement(\"span\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Register\")), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    required: true,\n    minLength: \"8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password_confirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Confirm Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password_confirm\",\n    value: password_confirm,\n    onChange: onChange,\n    required: true,\n    minLength: \"8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Register\",\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/contact/client/src/components/auth/register.jsx"],"names":["React","useState","useContext","useEffect","AlertContext","AuthContext","Register","alertContext","authContext","setAlert","register","error","clearErrors","isAuthenticated","props","history","push","name","email","password","password_confirm","user","setUser","onChange","e","target","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../contexts/alert/alertContext';\nimport AuthContext from '../../contexts/auth/authContext';\n\n\nconst Register = () =>{\n\tconst alertContext = useContext(AlertContext);\n\tconst authContext = useContext(AuthContext);\n\n\tconst { setAlert } = alertContext;\n\tconst { register, error, clearErrors, isAuthenticated } = authContext;\n\n\tuseEffect(()=>{\n\t\tif(isAuthenticated){\n\t\t\tprops.history.push('/');\n\t\t}\n\t\tif(error === 'User already exists'){\n\t\t\tsetAlert(error, 'danger');\n\t\t\tclearErrors();\n\t\t}\n\t}, [error]);\n\n\tconst [ user, setUser] = useState({\n\t\tname: '',\n\t\temail:'',\n\t\tpassword: '',\n\t\tpassword_confirm: ''\n\t});\n\tconst { name, email, password, password_confirm} = user;\n\n\tconst onChange = e => setUser({...user, [e.target.name]: e.target.value});\n\tconst onSubmit = e => {\n\t\te.preventDefault();\n\t\tif( name === '' || email === '' || password === ''){\n\t\t\tsetAlert('Please enter all fields', 'danger')\n\t\t}else if (password !== password_confirm){\t\n\t\t\tsetAlert('Passwords do not match', 'danger')\n\t\t}else{\n\t\t\tregister({\n\t\t\t\tname,\n\t\t\t\temail,\n\t\t\t\tpassword\n\t\t\t});\n\t\t}\n\t\t\n\t};\n\n\n\treturn(\n\t\t<div className='form-container'>\n\t\t\t<h1>Account <span className='text-primary'>Register</span></h1>\n\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<label htmlFor='name'>Name</label>\n\t\t\t\t\t<input type='text' name='name' value={name} onChange={onChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<label htmlFor='email'>Email</label>\n\t\t\t\t\t<input type='email' name='email' value={email} onChange={onChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<label htmlFor='password'>Password</label>\n\t\t\t\t\t<input type='password' name='password' value={password} onChange={onChange} required minLength='8' />\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<label htmlFor='password_confirm'>Confirm Password</label>\n\t\t\t\t\t<input type='password' name='password_confirm' value={password_confirm} onChange={onChange} required minLength='8' />\n\t\t\t\t</div>\n\t\t\t\t<input type='submit' value='Register' className='btn btn-primary btn-block' />\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}