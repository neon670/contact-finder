{"ast":null,"code":"import _defineProperty from \"/Users/noe/vagrant-lamp/sites/contact/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, CONTACT_ERROR, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../type';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [...state.contacts, action.payload]\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      });\n\n    case CONTACT_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case FILTER_CONTACTS:\n      return _objectSpread({}, state, {\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(\"\".concat(action.payload), 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filtered: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/contact/client/src/contexts/contact/contactReducer.js"],"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","CONTACT_ERROR","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","state","action","type","contacts","payload","map","contact","id","filter","error","current","filtered","regex","RegExp","name","match","email"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,WAAvB,EAAoCC,cAApC,EAAmDC,aAAnD,EAAkEC,WAAlE,EAA+EC,aAA/E,EAA8FC,cAA9F,EAA8GC,eAA9G,EAA+HC,YAA/H,QAAmJ,SAAnJ;AAGA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKV,WAAL;AACA,+BACIQ,KADJ;AAECG,QAAAA,QAAQ,EAAC,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFV;;AAIA,SAAKP,cAAL;AACA,+BACIG,KADJ;AAECG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,GAAf,CAAmBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAP,CAAeG,EAA9B,GAAmCN,MAAM,CAACG,OAA1C,GAAoDE,OAAlF;AAFX;;AAIA,SAAKb,cAAL;AACA,+BACIO,KADJ;AAECG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeK,MAAf,CAAsBF,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAvD;AAFX;;AAIA,SAAKV,aAAL;AACA,+BACIM,KADJ;AAECS,QAAAA,KAAK,EAAER,MAAM,CAACG;AAFf;;AAIA,SAAKT,WAAL;AACA,+BACIK,KADJ;AAECU,QAAAA,OAAO,EAAET,MAAM,CAACG;AAFjB;;AAIA,SAAKR,aAAL;AACA,+BACII,KADJ;AAECU,QAAAA,OAAO,EAAE;AAFV;;AAIA,SAAKZ,eAAL;AACA,+BACIE,KADJ;AAECW,QAAAA,QAAQ,EAAEX,KAAK,CAACG,QAAN,CAAeK,MAAf,CAAsBF,OAAO,IAAI;AAC1C,gBAAMM,KAAK,GAAG,IAAIC,MAAJ,WAAcZ,MAAM,CAACG,OAArB,GAAgC,IAAhC,CAAd;AACA,iBAAOE,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BN,OAAO,CAACU,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACA,SAHS;AAFX;;AAOA,SAAKb,YAAL;AACA,+BACIC,KADJ;AAECW,QAAAA,QAAQ,EAAE;AAFX;;AAIA;AACA,aAAOX,KAAP;AA7CD;AA+CA,CAhDD","sourcesContent":["import { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT,CONTACT_ERROR, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER}  from '../type';\n\n\nexport default (state, action) => {\n\tswitch(action.type){\n\t\tcase ADD_CONTACT:\n\t\treturn{\n\t\t\t...state,\n\t\t\tcontacts:[...state.contacts, action.payload]\n\t\t};\n\t\tcase UPDATE_CONTACT:\n\t\treturn{\n\t\t\t...state,\n\t\t\tcontacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n\t\t};\n\t\tcase DELETE_CONTACT:\n\t\treturn{\n\t\t\t...state,\n\t\t\tcontacts: state.contacts.filter(contact => contact.id !== action.payload)\n\t\t};\n\t\tcase CONTACT_ERROR:\n\t\treturn{\n\t\t\t...state,\n\t\t\terror: action.payload\n\t\t};\n\t\tcase SET_CURRENT:\n\t\treturn{\n\t\t\t...state,\n\t\t\tcurrent: action.payload\n\t\t};\n\t\tcase CLEAR_CURRENT:\n\t\treturn{\n\t\t\t...state,\n\t\t\tcurrent: null\n\t\t};\n\t\tcase FILTER_CONTACTS:\n\t\treturn{\n\t\t\t...state,\n\t\t\tfiltered: state.contacts.filter(contact => {\n\t\t\t\tconst regex = new RegExp(`${action.payload}`, 'gi');\n\t\t\t\treturn contact.name.match(regex) || contact.email.match(regex);\n\t\t\t})\n\t\t};\n\t\tcase CLEAR_FILTER:\n\t\treturn{\n\t\t\t...state,\n\t\t\tfiltered: null\n\t\t};\n\t\tdefault: \n\t\treturn\tstate;\n\t}\n}"]},"metadata":{},"sourceType":"module"}