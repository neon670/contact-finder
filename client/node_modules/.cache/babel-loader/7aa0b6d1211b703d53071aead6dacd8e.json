{"ast":null,"code":"import _defineProperty from \"/Users/noe/vagrant-lamp/sites/contact/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/noe/vagrant-lamp/sites/contact/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/noe/vagrant-lamp/sites/contact/client/src/components/contacts/contact-form.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../contexts/contact/contactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const addContact = contactContext.addContact,\n        current = contactContext.current,\n        updateContact = contactContext.updateContact,\n        clearCurrent = contactContext.clearCurrent;\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [contactContext, current]);\n\n  const _useState = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1];\n\n  const name = contact.name,\n        email = contact.email,\n        phone = contact.phone,\n        type = contact.type;\n\n  const onChange = e => setContact(_objectSpread({}, contact, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact();\n    }\n\n    clearAll();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, current ? 'Edit Contact' : 'Add Contact'), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Contact Type\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === 'personal',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), \" Personal \", '', React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === 'professional',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \" Professional \", '', React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? 'Update Contact' : 'Add Contact',\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), current && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Clear\")));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/contact/client/src/components/contacts/contact-form.jsx"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","updateContact","clearCurrent","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../contexts/contact/contactContext';\n\n\nconst ContactForm = () => {\n\tconst contactContext = useContext(ContactContext);\n\tconst { addContact, current, updateContact, clearCurrent } = contactContext;\n\n\tuseEffect(()=>{\n\t\tif(current !==null){\n\t\t\tsetContact(current);\n\t\t}else{\n\t\t\tsetContact({\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tphone: '',\n\t\t\ttype: 'personal'\n\t\t\t});\n\t\t}\n\t}, [contactContext, current]);\n\n\tconst [ contact, setContact] = useState({\n\t\tname: '',\n\t\temail: '',\n\t\tphone: '',\n\t\ttype: 'personal'\n\t});\n\tconst { name, email, phone, type } = contact;\n\n\tconst onChange = e => setContact({...contact, [e.target.name]: e.target.value});\n\tconst onSubmit = e =>{\n\t\te.preventDefault();\n\t\tif(current === null){\n\t\t\taddContact(contact);\n\t\t}else{\n\t\t\tupdateContact();\n\t\t}\n\t\tclearAll();\t\n\t};\n\tconst clearAll =() => {\n\t\tclearCurrent();\n\t}\n\treturn(\n\t\t<form onSubmit={onSubmit}>\n\t\t<h2 className='text-primary'>{current ? 'Edit Contact' : 'Add Contact' }</h2>\n\t\t\t<input type='text' placeholder='Name' name='name' value={name} onChange={onChange} />\n\t\t\t<input type='email' placeholder='Email' name='email' value={email} onChange={onChange} />\n\t\t\t<input type='text' placeholder='Phone' name='phone' value={phone} onChange={onChange} />\n\n\t\t\t<h5>Contact Type</h5>\n\t\t\t<input type='radio' name='type' value='personal' checked={ type === 'personal'} onChange={onChange} /> Personal {''}\n\t\t\t<input type='radio' name='type' value='professional' checked={ type === 'professional'} onChange={onChange} /> Professional {''}\n\t\t\t\t<div>\n\t\t\t\t<input type='submit' value={current ? 'Update Contact' : 'Add Contact' } className='btn btn-primary btn-block'/>\n\t\t\t\t</div>\n\t\t\t{current && <div>\n\t\t\t\t\t\t<button className='btn btn-light btn-block' onClick={clearAll}>Clear</button>\n\t\t\t\t\t\t</div>}\n\t\t</form>\n\t)\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}