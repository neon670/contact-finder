{"ast":null,"code":"var _jsxFileName = \"/Users/noe/vagrant-lamp/sites/contact/client/src/components/contacts/contacts.jsx\";\nimport React, { Fragment, useContext } from 'react';\nimport ContactContext from '../../contexts/contact/contactContext';\nimport ContactItem from './contact-item';\nimport { CSSTranistion, TransitionGroup } from 'react-transition-group';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const contacts = contactContext.contacts,\n        filtered = contactContext.filtered;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, filtered != null ? filtered.map(contact => React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })) : contacts.map(contact => React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/contact/client/src/components/contacts/contacts.jsx"],"names":["React","Fragment","useContext","ContactContext","ContactItem","CSSTranistion","TransitionGroup","Contacts","contactContext","contacts","filtered","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACtB,QAAMC,cAAc,GAAGN,UAAU,CAACC,cAAD,CAAjC;AADsB,QAGdM,QAHc,GAGSD,cAHT,CAGdC,QAHc;AAAA,QAGJC,QAHI,GAGSF,cAHT,CAGJE,QAHI;AAItB,SACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,QAAQ,IAAI,IAAZ,GAAmBA,QAAQ,CAACC,GAAT,CAAaC,OAAO,IAAK,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,CAAnB,GAAkGH,QAAQ,CAACE,GAAT,CAAaC,OAAO,IACrH,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiG,CADnG,CADD;AAQA,CAZD;;AAaA,eAAeL,QAAf","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport ContactContext from '../../contexts/contact/contactContext';\nimport ContactItem from './contact-item';\n\nimport { CSSTranistion, TransitionGroup } from 'react-transition-group';\n\nconst Contacts = () => {\n\tconst contactContext = useContext(ContactContext);\n\n\tconst { contacts, filtered } = contactContext;\n\treturn(\n\t\t<Fragment>\n\t\t{filtered != null ? filtered.map(contact => (<ContactItem key={contact.id} contact={contact}/>)) : contacts.map(contact =>(\n\t\t\t\t<ContactItem key={contact.id} contact={contact}/>\n\t\t\t))}\n\t\t\t\n\t\t</Fragment>\n\t)\n};\nexport default Contacts;"]},"metadata":{},"sourceType":"module"}