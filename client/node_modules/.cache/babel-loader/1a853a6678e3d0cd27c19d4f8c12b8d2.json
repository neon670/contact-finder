{"ast":null,"code":"import _slicedToArray from \"/Users/noe/vagrant-lamp/sites/contact/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/noe/vagrant-lamp/sites/contact/client/src/contexts/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../type';\n\nconst ContactState = props => {\n  const intialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n\n  const _useReducer = useReducer(contactReducer, intialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //add\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n    } catch (err) {}\n\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //delete\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //set current\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //clear current\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //update\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //filter\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //clear\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/contact/client/src/contexts/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","intialState","contacts","current","filtered","state","dispatch","addContact","contact","config","headers","res","post","err","type","payload","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,WAAtC,EAAmDC,aAAnD,EAAkEC,cAAlE,EAAkFC,eAAlF,EAAmGC,YAAnG,QAAuH,SAAvH;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC7B,QAAMC,WAAW,GAAE;AAClBC,IAAAA,QAAQ,EAAE,EADQ;AAIlBC,IAAAA,OAAO,EAAE,IAJS;AAKlBC,IAAAA,QAAQ,EAAE;AALQ,GAAnB;;AAD6B,sBAQDhB,UAAU,CAACG,cAAD,EAAiBU,WAAjB,CART;AAAA;AAAA,QAQrBI,KARqB;AAAA,QAQdC,QARc,oBAU7B;;;AACA,QAAMC,UAAU,GAAG,MAAMC,OAAN,IAAiB;AACnC,UAAMC,MAAM,GAAG;AACdC,MAAAA,OAAO,EAAC;AACP,wBAAe;AADR;AADM,KAAf;;AAKA,QAAG;AACF,YAAMC,GAAG,GAAG,MAAMtB,KAAK,CAACuB,IAAN,CAAW,eAAX,EAA4BJ,OAA5B,EAAqCC,MAArC,CAAlB;AACA,KAFD,CAEC,OAAMI,GAAN,EAAU,CAEV;;AAEDP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEtB,WAAR;AAAqBuB,MAAAA,OAAO,EAAEP;AAA9B,KAAD,CAAR;AACA,GAbD,CAX6B,CA0B7B;;;AACA,QAAMQ,aAAa,GAAGC,EAAE,IAAI;AAC3BX,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAErB,cAAR;AAAwBsB,MAAAA,OAAO,EAAEE;AAAjC,KAAD,CAAR;AACA,GAFD,CA3B6B,CA+B7B;;;AACA,QAAMC,UAAU,GAAGV,OAAO,IAAI;AAC7BF,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEpB,WAAR;AAAqBqB,MAAAA,OAAO,EAAEP;AAA9B,KAAD,CAAR;AACA,GAFD,CAhC6B,CAoC7B;;;AACA,QAAMW,YAAY,GAAG,MAAM;AAC1Bb,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEnB;AAAR,KAAD,CAAR;AACA,GAFD,CArC6B,CAwC7B;;;AACA,QAAMyB,aAAa,GAAGZ,OAAO,IAAI;AAChCF,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAElB,cAAR;AAAwBmB,MAAAA,OAAO,EAAEP;AAAjC,KAAD,CAAR;AACA,GAFD,CAzC6B,CA4C7B;;;AACA,QAAMa,cAAc,GAAGC,IAAI,IAAI;AAC9BhB,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEjB,eAAR;AAAyBkB,MAAAA,OAAO,EAAEO;AAAlC,KAAD,CAAR;AACA,GAFD,CA7C6B,CAgD7B;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACzBjB,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEhB;AAAR,KAAD,CAAR;AACA,GAFD;;AAIA,SACC,oBAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,EAAE;AACNI,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QADV;AAENC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFT;AAGNC,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QAHV;AAING,MAAAA,UAJM;AAKNS,MAAAA,aALM;AAMNE,MAAAA,UANM;AAONC,MAAAA,YAPM;AAQNC,MAAAA,aARM;AASNC,MAAAA,cATM;AAUNE,MAAAA;AAVM,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaEvB,KAAK,CAACwB,QAbR,CADD;AAiBA,CAtED;;AAwEA,eAAezB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER}  from '../type';\n\nconst ContactState = props => {\n\tconst intialState ={\n\t\tcontacts: [\n\t\t\t\n\t ],\n\t current: null, \n\t filtered: null\n\t};\n\tconst [ state, dispatch ] = useReducer(contactReducer, intialState);\n\n\t//add\n\tconst addContact = async contact => {\n\t\tconst config = {\n\t\t\theaders:{\n\t\t\t\t'Content-Type':'application/json'\n\t\t\t}\n\t\t}\n\t\ttry{\n\t\t\tconst res = await axios.post('/api/contacts', contact, config);\n\t\t}catch(err){\n\n\t\t}\n\n\t\tdispatch({ type: ADD_CONTACT, payload: contact });\n\t};\n\n\t//delete\n\tconst deleteContact = id => {\n\t\tdispatch({ type: DELETE_CONTACT, payload: id });\n\t};\n\n\t//set current\n\tconst setCurrent = contact => {\n\t\tdispatch({ type: SET_CURRENT, payload: contact });\n\t};\n\n\t//clear current\n\tconst clearCurrent = () => {\n\t\tdispatch({ type: CLEAR_CURRENT});\n\t};\n\t//update\n\tconst updateContact = contact => {\n\t\tdispatch({ type: UPDATE_CONTACT, payload: contact });\n\t};\n\t//filter\n\tconst filterContacts = text => {\n\t\tdispatch({ type: FILTER_CONTACTS, payload: text });\n\t};\n\t//clear\n\tconst clearFilter = () => {\n\t\tdispatch({ type: CLEAR_FILTER});\n\t};\n\n\treturn (\n\t\t<ContactContext.Provider \n\t\tvalue={{\n\t\t\tcontacts: state.contacts,\n\t\t\tcurrent: state.current,\n\t\t\tfiltered: state.filtered,\n\t\t\taddContact,\n\t\t\tdeleteContact,\n\t\t\tsetCurrent,\n\t\t\tclearCurrent,\n\t\t\tupdateContact,\n\t\t\tfilterContacts,\n\t\t\tclearFilter\n\t\t}}>\n\t\t\t{props.children}\n\t\t</ContactContext.Provider>\n\t)\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}